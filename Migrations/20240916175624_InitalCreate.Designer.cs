// <auto-generated />
using System;
using KaizenAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KaizenAPI.Migrations
{
    [DbContext(typeof(KaizenContext))]
    [Migration("20240916175624_InitalCreate")]
    partial class InitalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KaizenAPI.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("KaizenAPI.Models.Aluno", b =>
                {
                    b.OwnsOne("KaizenAPI.Models.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("AlunoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("CEP")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("DDD")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Localidade")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("UF")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("AlunoId");

                            b1.ToTable("Alunos");

                            b1.WithOwner()
                                .HasForeignKey("AlunoId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
